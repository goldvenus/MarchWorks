{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _typeof from \"@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar ImageEditor =\n/*#__PURE__*/\nfunction () {\n  function ImageEditor(canvas, src, maxWidth, maxHeight) {\n    var filter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'grayscale';\n    var args = arguments.length > 5 ? arguments[5] : undefined;\n\n    _classCallCheck(this, ImageEditor);\n\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this.src = src;\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.data = [];\n    this.filter = filter;\n    this.args = typeof args === 'string' ? args.toLowerCase() : _typeof(args) === 'object' || typeof args === 'function' ? false : args;\n    this.originalData = null;\n    this.load();\n  }\n\n  _createClass(ImageEditor, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.addImageProcess(this.src);\n\n              case 2:\n                this.img = _context.sent;\n                this.onload();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"addImageProcess\",\n    value: function addImageProcess(src) {\n      return new _Promise(function (resolve, reject) {\n        var img = new Image();\n\n        img.onload = function () {\n          return resolve(img);\n        };\n\n        img.onerror = reject;\n        img.src = src;\n      });\n    }\n  }, {\n    key: \"onload\",\n    value: function onload() {\n      var maxw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var maxh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (maxh !== 0 && maxw !== 0) {\n        this.maxWidth = maxw;\n        this.maxHeight = maxh;\n      }\n\n      if (this.img.naturalWidth > this.maxWidth) {\n        this.img.height = this.img.height * this.maxWidth / this.img.width;\n        this.img.width = this.maxWidth;\n      }\n\n      if (this.img.height > this.maxHeight) {\n        this.img.width = this.img.width * this.maxHeight / this.img.height;\n        this.img.height = this.maxHeight;\n      }\n\n      if (this.filter === 'sobel') {\n        this.data = this.sobel();\n        this.ctx.putImageData(this.data, 0, 0);\n      } else {\n        var st = ['reverseRGB'];\n        var args = st.includes(this.filter) ? ['rg', 'gr', 'rb', 'br', 'bg', 'gb'].includes(this.args) ? this.args : 'rb' : 100;\n        this.data = this.filterImage(this.filter, args);\n        this.ctx.putImageData(this.data, 0, 0);\n      }\n    }\n  }, {\n    key: \"getPixels\",\n    value: function getPixels() {\n      this.canvas.width = this.img.width;\n      this.canvas.height = this.img.height;\n      this.ctx.drawImage(this.img, 0, 0, this.canvas.width, this.canvas.height);\n      this.originalData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n      return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }, {\n    key: \"filterImage\",\n    value: function filterImage(filter, var_args) {\n      var args = [this.getPixels()];\n\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n\n      return this[filter].apply(null, args);\n    }\n  }, {\n    key: \"grayscale\",\n    value: function grayscale(pixels, args) {\n      var d = pixels.data;\n\n      for (var i = 0; i < d.length; i += 4) {\n        var r = d[i];\n        var g = d[i + 1];\n        var b = d[i + 2]; // CIE luminance for the RGB\n        // The human eye is bad at seeing red and blue, so we de-emphasize them.\n\n        var v = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n        d[i] = d[i + 1] = d[i + 2] = v;\n      }\n\n      return pixels;\n    }\n  }, {\n    key: \"threshold\",\n    value: function threshold(pixels) {\n      var _threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var d = pixels.data;\n\n      for (var i = 0; i < d.length; i += 4) {\n        var r = d[i];\n        var g = d[i + 1];\n        var b = d[i + 2];\n        var v = 0.2126 * r + 0.7152 * g + 0.0722 * b >= _threshold ? 255 : 0;\n        d[i] = d[i + 1] = d[i + 2] = v;\n      }\n\n      return pixels;\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse(pixels, threshold) {\n      var d = pixels.data;\n\n      for (var i = 0; i < d.length; i += 4) {\n        d[i] = 255 - d[i];\n        d[i + 1] = 255 - d[i + 1];\n        d[i + 2] = 255 - d[i + 2];\n      }\n\n      return pixels;\n    }\n  }, {\n    key: \"reverseRGB\",\n    value: function reverseRGB(pixels) {\n      var rgb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'rb';\n      var d = pixels.data;\n\n      if (rgb === 'rg' || rgb === 'gr') {\n        for (var i = 0; i < d.length; i += 4) {\n          var e = d[i];\n          d[i] = d[i + 1];\n          d[i + 1] = e;\n        }\n      } else if (rgb === 'rb' || rgb === 'br') {\n        for (var i = 0; i < d.length; i += 4) {\n          var e = d[i];\n          d[i] = d[i + 2];\n          d[i + 2] = e;\n        }\n      } else if (rgb === 'gb' || rgb === 'bg') {\n        for (var i = 0; i < d.length; i += 4) {\n          var e = d[i + 1];\n          d[i + 1] = d[i + 2];\n          d[i + 2] = e;\n        }\n      }\n\n      return pixels;\n    }\n  }, {\n    key: \"sobel\",\n    value: function sobel() {\n      var grayscale = this.filterImage(\"reverseRGB\", 'rb'); // Note that ImageData values are clamped between 0 and 255, so we need\n      // to use a Float32Array for the gradient values because they\n      // range between -255 and 255.\n\n      var vertical = this.convolute(grayscale, [0, 0, 0, 0, Math.random() + 1, 0, 0, 0, 0]);\n      var horizontal = this.convolute(grayscale, [0, 0, 0, 0, Math.random() + 1, 0, 0, 0, 0]);\n      var final_image = this.ctx.createImageData(vertical.width, vertical.height);\n\n      for (var i = 0; i < final_image.data.length; i += 4) {\n        // make the vertical gradient red\n        var v = Math.abs(vertical.data[i]);\n        final_image.data[i] = v; // make the horizontal gradient green\n\n        var h = Math.abs(horizontal.data[i]);\n        final_image.data[i + 1] = h; // and mix in some blue for aesthetics\n\n        final_image.data[i + 2] = (v + h) / 2;\n        final_image.data[i + 3] = 255; // opaque alpha\n      }\n\n      return final_image;\n    }\n  }, {\n    key: \"convolute\",\n    value: function convolute(pixels, weights, opaque) {\n      var side = Math.round(Math.sqrt(weights.length));\n      var halfSide = Math.floor(side / 2);\n      var src = pixels.data;\n      var sw = pixels.width;\n      var sh = pixels.height; // pad output by the convolution matrix\n\n      var w = sw;\n      var h = sh;\n      var output = this.ctx.createImageData(w, h);\n      var dst = output.data; // go through the destination image pixels\n\n      var alphaFac = opaque ? 1 : 0;\n\n      for (var y = 0; y < h; y++) {\n        for (var x = 0; x < w; x++) {\n          var sy = y;\n          var sx = x;\n          var dstOff = (y * w + x) * 4; // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n\n          var r = 0,\n              g = 0,\n              b = 0,\n              a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              var scy = sy + cy - halfSide;\n              var scx = sx + cx - halfSide;\n\n              if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                var srcOff = (scy * sw + scx) * 4;\n                var wt = weights[cy * side + cx];\n                r += src[srcOff] * wt;\n                g += src[srcOff + 1] * wt;\n                b += src[srcOff + 2] * wt;\n                a += src[srcOff + 3] * wt;\n              }\n            }\n          }\n\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      return output;\n    }\n  }]);\n\n  return ImageEditor;\n}();\n\nexport default ImageEditor;","map":{"version":3,"sources":["C:\\Users\\010\\NextProjects\\Edel\\classes\\ImageEditor.js"],"names":["ImageEditor","canvas","src","maxWidth","maxHeight","filter","args","ctx","getContext","data","toLowerCase","originalData","load","addImageProcess","img","onload","resolve","reject","Image","onerror","maxw","maxh","naturalWidth","height","width","sobel","putImageData","st","includes","filterImage","drawImage","getImageData","var_args","getPixels","i","arguments","length","push","apply","pixels","d","r","g","b","v","threshold","rgb","e","grayscale","vertical","convolute","Math","random","horizontal","final_image","createImageData","abs","h","weights","opaque","side","round","sqrt","halfSide","floor","sw","sh","w","output","dst","alphaFac","y","x","sy","sx","dstOff","a","cy","cx","scy","scx","srcOff","wt"],"mappings":"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","sourcesContent":["class ImageEditor {\r\n\tconstructor(canvas, src, maxWidth, maxHeight, filter='grayscale', args) {\r\n\t\tthis.maxWidth = maxWidth\r\n\t\tthis.maxHeight = maxHeight\r\n\t\tthis.src = src\r\n\t\tthis.canvas = canvas\r\n\t\tthis.ctx = this.canvas.getContext('2d')\r\n\t\tthis.data = []\r\n\t\tthis.filter = filter\r\n\t\tthis.args = typeof args === 'string' ? args.toLowerCase() : ((typeof args === 'object' || typeof args === 'function') ? false : args)\r\n\t\tthis.originalData = null\r\n\t\tthis.load()\r\n\t}\r\n\tasync load(){\r\n\t\tthis.img = await this.addImageProcess(this.src)\r\n\t\tthis.onload()\r\n\t}\r\n\taddImageProcess(src){\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t    let img = new Image()\r\n\t    img.onload = () => resolve(img)\r\n\t    img.onerror = reject\r\n\t    img.src = src\r\n  \t\t})\r\n\t}\r\n\tonload(maxw=0 , maxh=0){\r\n\t\tif(maxh !== 0 && maxw !== 0){\r\n\t\t\tthis.maxWidth = maxw;\r\n\t\t\tthis.maxHeight = maxh;\r\n\t\t}\r\n\t\tif(this.img.naturalWidth   > this.maxWidth){\r\n\t\t\tthis.img.height = this.img.height*this.maxWidth/this.img.width\r\n\t\t\tthis.img.width  = this.maxWidth\r\n\t\t}\r\n\t\tif(this.img.height  > this.maxHeight){\r\n\t\t\tthis.img.width  = this.img.width*this.maxHeight/this.img.height\t\r\n\t\t\tthis.img.height = this.maxHeight\r\n\t\t}\r\n\r\n\t\tif(this.filter === 'sobel'){\r\n\t\t\tthis.data = this.sobel()\r\n\t\t\tthis.ctx.putImageData(this.data, 0, 0);\r\n\t\t}else{\r\n\t\t\tvar st = ['reverseRGB']\r\n\t\t\tvar args = st.includes(this.filter) ? (['rg', 'gr', 'rb', 'br', 'bg', 'gb'].includes(this.args) ? this.args : 'rb') : 100\r\n\t\t\tthis.data = this.filterImage(this.filter, args)\r\n\t\t\tthis.ctx.putImageData(this.data, 0, 0);\r\n\t\t}\r\n\t}\r\n\tgetPixels() {\r\n\t\tthis.canvas.width = this.img.width;\r\n\t\tthis.canvas.height = this.img.height;\r\n\t\tthis.ctx.drawImage(this.img, 0, 0, this.canvas.width, this.canvas.height);\r\n\t\tthis.originalData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n\t\treturn this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n\t}\r\n\tfilterImage(filter, var_args) {\r\n\t  \tvar args = [this.getPixels()];\r\n\t  \tfor (var i=1; i<arguments.length; i++) {\r\n\t    \targs.push(arguments[i]);\r\n\t  \t}\r\n\t  \treturn this[filter].apply(null, args);\r\n\t}\r\n\tgrayscale(pixels, args) {\r\n\t  \tvar d = pixels.data;\r\n\t  \tfor (var i=0; i<d.length; i+=4) {\r\n\t\t    var r = d[i];\r\n\t\t    var g = d[i+1];\r\n\t\t    var b = d[i+2];\r\n\t\t    // CIE luminance for the RGB\r\n\t\t    // The human eye is bad at seeing red and blue, so we de-emphasize them.\r\n\t\t    var v = 0.2126*r + 0.7152*g + 0.0722*b;\r\n\t\t    d[i] = d[i+1] = d[i+2] = v\r\n\t  \t}\r\n\t  \treturn pixels;\r\n\t}\r\n\tthreshold(pixels, threshold=100) {\r\n\t\tvar d = pixels.data;\r\n\t\tfor (var i=0; i<d.length; i+=4) {\r\n\t\t    var r = d[i];\r\n\t\t    var g = d[i+1];\r\n\t\t    var b = d[i+2];\r\n\t\t    var v = (0.2126*r + 0.7152*g + 0.0722*b >= threshold) ? 255 : 0;\r\n\t\t    d[i] = d[i+1] = d[i+2] = v\r\n\t\t}\r\n  \t\treturn pixels;\r\n\t}\r\n\treverse(pixels, threshold) {\r\n\t\tvar d = pixels.data;\r\n\t\tfor (var i=0; i<d.length; i+=4) {\r\n\t\t    d[i] = 255 - d[i];\r\n\t\t    d[i+1] = 255 - d[i+1];\r\n\t\t    d[i+2] = 255 - d[i+2];\r\n\t\t}\r\n  \t\treturn pixels;\r\n\t}\r\n\treverseRGB(pixels, rgb='rb') {\r\n\t\tvar d = pixels.data;\r\n\t\tif(rgb === 'rg' || rgb === 'gr'){\r\n\t\t\tfor (var i=0; i<d.length; i+=4) {\r\n\t\t\t\tvar e = d[i];\r\n\t\t\t\td[i] = d[i+1];\r\n\t\t    \td[i+1] = e;\r\n\t\t\t}\r\n\t\t}else if(rgb === 'rb' || rgb === 'br'){\r\n\t\t\tfor (var i=0; i<d.length; i+=4) {\r\n\t\t\t\tvar e = d[i];\r\n\t\t\t    d[i] = d[i+2];\r\n\t\t\t    d[i+2] = e;\r\n\t\t\t}\t\r\n\t\t}else if(rgb === 'gb' || rgb === 'bg'){\r\n\t\t\tfor (var i=0; i<d.length; i+=4) {\r\n\t\t\t\tvar e = d[i+1];\r\n\t\t\t    d[i+1] = d[i+2];\r\n\t\t\t    d[i+2] = e;\r\n\t\t\t}\t\r\n\t\t}\r\n  \t\treturn pixels;\r\n\t}\r\n\tsobel(){\r\n\t\tvar grayscale = this.filterImage(\"reverseRGB\", 'rb');\r\n\t\t// Note that ImageData values are clamped between 0 and 255, so we need\r\n\t\t// to use a Float32Array for the gradient values because they\r\n\t\t// range between -255 and 255.\r\n\r\n\t\tvar vertical = this.convolute(grayscale,\r\n\t\t  [ 0  ,   0  ,   0,\r\n\t\t    0  ,   Math.random()+1  ,   0,\r\n\t\t    0  ,   0  ,   0 ]);\r\n\t\tvar horizontal = this.convolute(grayscale,\r\n\t\t  [ 0  ,   0  ,   0,\r\n\t\t    0  ,   Math.random()+1  ,   0,\r\n\t\t    0  ,   0  ,   0 ]);\r\n\t\tvar final_image = this.ctx.createImageData(vertical.width, vertical.height);\r\n\t\tfor (var i=0; i<final_image.data.length; i+=4) {\r\n\t\t  // make the vertical gradient red\r\n\t\t  var v = Math.abs(vertical.data[i]);\r\n\t\t  final_image.data[i] = v;\r\n\t\t  // make the horizontal gradient green\r\n\t\t  var h = Math.abs(horizontal.data[i]);\r\n\t\t  final_image.data[i+1] = h;\r\n\t\t  // and mix in some blue for aesthetics\r\n\t\t  final_image.data[i+2] = (v+h)/2;\r\n\t\t  final_image.data[i+3] = 255; // opaque alpha\r\n\t\t}\r\n\t\treturn final_image\r\n\t}\r\n\r\n\tconvolute(pixels, weights, opaque) {\r\n\t\tvar side = Math.round(Math.sqrt(weights.length));\r\n\t\tvar halfSide = Math.floor(side/2);\r\n\t\tvar src = pixels.data;\r\n\t\tvar sw = pixels.width;\r\n\t\tvar sh = pixels.height;\r\n\t\t// pad output by the convolution matrix\r\n\t\tvar w = sw;\r\n\t\tvar h = sh;\r\n\t\tvar output = this.ctx.createImageData(w, h);\r\n\t\tvar dst = output.data;\r\n\t\t// go through the destination image pixels\r\n\t\tvar alphaFac = opaque ? 1 : 0;\r\n\t\tfor (var y=0; y<h; y++) {\r\n\t\t\tfor (var x=0; x<w; x++) {\r\n\t\t\t  var sy = y;\r\n\t\t\t  var sx = x;\r\n\t\t\t  var dstOff = (y*w+x)*4;\r\n\t\t\t  // calculate the weighed sum of the source image pixels that\r\n\t\t\t  // fall under the convolution matrix\r\n\t\t\t  var r=0, g=0, b=0, a=0;\r\n\t\t\t  for (var cy=0; cy<side; cy++) {\r\n\t\t\t    for (var cx=0; cx<side; cx++) {\r\n\t\t\t      var scy = sy + cy - halfSide;\r\n\t\t\t      var scx = sx + cx - halfSide;\r\n\t\t\t      if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\r\n\t\t\t        var srcOff = (scy*sw+scx)*4;\r\n\t\t\t        var wt = weights[cy*side+cx];\r\n\t\t\t        r += src[srcOff] * wt;\r\n\t\t\t        g += src[srcOff+1] * wt;\r\n\t\t\t        b += src[srcOff+2] * wt;\r\n\t\t\t        a += src[srcOff+3] * wt;\r\n\t\t\t      }\r\n\t\t\t    }\r\n\t\t\t  }\r\n\t\t\t  dst[dstOff] = r;\r\n\t\t\t  dst[dstOff+1] = g;\r\n\t\t\t  dst[dstOff+2] = b;\r\n\t\t\t  dst[dstOff+3] = a + alphaFac*(255-a);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n}\r\n\r\nexport default ImageEditor;"]},"metadata":{},"sourceType":"module"}